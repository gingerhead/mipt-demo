/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * API
 * API description
 * OpenAPI spec version: 0.1
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  CreatePatientDto,
  CreateVisitDto,
  GetFilteredPatientsParams,
  GetPatientsParams,
  PaginatedPatientOutput,
  Patient,
  UpdatePatientDto,
  UpdateVisitDto,
  Visit
} from './types';

export const getApi = () => {
const getPatients = <TData = AxiosResponse<PaginatedPatientOutput>>(
    params: GetPatientsParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/v1/patients`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const createPatient = <TData = AxiosResponse<Patient>>(
    createPatientDto: CreatePatientDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/v1/patients`,
      createPatientDto,options
    );
  }

const getAllPatients = <TData = AxiosResponse<Patient[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/v1/patients/all`,options
    );
  }

const getFilteredPatients = <TData = AxiosResponse<PaginatedPatientOutput>>(
    searchString: string,
    params?: GetFilteredPatientsParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/v1/patients/search/${searchString}`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getPatientById = <TData = AxiosResponse<Patient>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/v1/patients/${id}`,options
    );
  }

const updatePatient = <TData = AxiosResponse<Patient>>(
    id: string,
    updatePatientDto: UpdatePatientDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `/v1/patients/${id}`,
      updatePatientDto,options
    );
  }

const deletePatient = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `/v1/patients/${id}`,options
    );
  }

const getVisits = <TData = AxiosResponse<Visit[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/v1/visits`,options
    );
  }

const createVisit = <TData = AxiosResponse<Visit>>(
    createVisitDto: CreateVisitDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/v1/visits`,
      createVisitDto,options
    );
  }

const getVisitById = <TData = AxiosResponse<Visit>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/v1/visits/${id}`,options
    );
  }

const updateVisit = <TData = AxiosResponse<Visit>>(
    id: string,
    updateVisitDto: UpdateVisitDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `/v1/visits/${id}`,
      updateVisitDto,options
    );
  }

const deleteVisit = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `/v1/visits/${id}`,options
    );
  }

const getVisitsByPatientId = <TData = AxiosResponse<Visit[]>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/v1/patients/${id}/visits`,options
    );
  }

return {getPatients,createPatient,getAllPatients,getFilteredPatients,getPatientById,updatePatient,deletePatient,getVisits,createVisit,getVisitById,updateVisit,deleteVisit,getVisitsByPatientId}};
export type GetPatientsResult = AxiosResponse<PaginatedPatientOutput>
export type CreatePatientResult = AxiosResponse<Patient>
export type GetAllPatientsResult = AxiosResponse<Patient[]>
export type GetFilteredPatientsResult = AxiosResponse<PaginatedPatientOutput>
export type GetPatientByIdResult = AxiosResponse<Patient>
export type UpdatePatientResult = AxiosResponse<Patient>
export type DeletePatientResult = AxiosResponse<void>
export type GetVisitsResult = AxiosResponse<Visit[]>
export type CreateVisitResult = AxiosResponse<Visit>
export type GetVisitByIdResult = AxiosResponse<Visit>
export type UpdateVisitResult = AxiosResponse<Visit>
export type DeleteVisitResult = AxiosResponse<void>
export type GetVisitsByPatientIdResult = AxiosResponse<Visit[]>
